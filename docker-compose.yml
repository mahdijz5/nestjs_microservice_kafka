version: "1"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_kafka_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_kafka_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data

  api:
    container_name: api-gateway
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - kafka
      - auth
      - post
    volumes:
      - .:/usr/src/app
    command: npm run start:dev api

  auth:
    container_name: auth
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
      - postgres
    volumes:
      - .:/usr/src/app
    command: npm run start:dev auth 

  post:
    container_name: post
    build:
      context: ./
      dockerfile: ./apps/post/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
      - postgres
    volumes:
      - .:/usr/src/app
    command: npm run start:dev post 

